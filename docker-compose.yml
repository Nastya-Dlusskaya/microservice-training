version: '3.9'
services:
  resource-service:
    build: "./resource-service"
    depends_on:
      - postgres-resource-service-db
      - song-service
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: ${RESOURCE_SERVICE_DATASOURCE_URL}
      SPRING_DATASOURCE_USER: ${RESOURCE_POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${RESOURCE_POSTGRES_PASSWORD}
      SONG_URL: ${RESOURCE_SERVICE_SONG_URL}

  song-service:
    build: "./song-service"
    depends_on:
      - postgres-song-service-db
    ports:
      - "8070:8070"
    environment:
      SPRING_DATASOURCE_URL: ${SONG_SERVICE_DATASOURCE_URL}
      SPRING_DATASOURCE_USER: ${SONG_POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${SONG_POSTGRES_PASSWORD}

  postgres-resource-service-db:
    image: postgres:16-alpine
    container_name: postgres-resource
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${RESOURCE_POSTGRES_SERVICE}
      POSTGRES_USER: ${RESOURCE_POSTGRES_USER}
      POSTGRES_PASSWORD: ${RESOURCE_POSTGRES_PASSWORD}
    volumes:
      - ./init-scripts/resource-db/init.sql:/docker-entrypoint-initdb.d/init.sql

  postgres-song-service-db:
    image: postgres:16-alpine
    container_name: postgres-song
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: ${SONG_POSTGRES_SERVICE}
      POSTGRES_USER: ${SONG_POSTGRES_USER}
      POSTGRES_PASSWORD: ${SONG_POSTGRES_PASSWORD}
    volumes:
      - ./init-scripts/song-db/init.sql:/docker-entrypoint-initdb.d/init.sql
